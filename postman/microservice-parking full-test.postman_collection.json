{
	"info": {
		"_postman_id": "67b86f29-0d7b-4122-bd60-993bb374ba06",
		"name": "microservice-parking full-test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "booking place - \"Account not found\"",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Account not found\", () => {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.result.code).to.eql('0');\r",
							"    pm.expect(responseJson.result.message).to.eql('Account not found');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-username",
						"value": "user4444",
						"type": "default"
					},
					{
						"key": "x-request-key",
						"value": "82e79781-086c-483d-85d4-899220bf4d11",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"parking\":{\"id\":null,\"placeId\":1,\"status\":\"booking\"}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/parking/api/v1/start",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"parking",
						"api",
						"v1",
						"start"
					]
				}
			},
			"response": []
		},
		{
			"name": "add few money",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Operation success\", () => {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.code).to.eql('0');\r",
							"    pm.expect(responseJson.message).to.eql('Operation success');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-username",
						"value": "user4444",
						"type": "default"
					},
					{
						"key": "x-request-key",
						"value": "82e79781-086c-483d-85d4-899220bf4d15",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"money\":{\"username\": \"user4444\", \"money\": 5.52, \"operation\": \"add\"}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/money/api/v1/operation",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"money",
						"api",
						"v1",
						"operation"
					]
				}
			},
			"response": []
		},
		{
			"name": "booking place - \"Money is tight\"",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Money is tight\", () => {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.result.code).to.eql('0');\r",
							"    pm.expect(responseJson.result.message).to.eql('Money is tight');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-username",
						"value": "user4444",
						"type": "default"
					},
					{
						"key": "x-request-key",
						"value": "82e79781-086c-483d-85d4-899220bf4d11",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"parking\":{\"id\":null,\"placeId\":1,\"status\":\"booking\"}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/parking/api/v1/start",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"parking",
						"api",
						"v1",
						"start"
					]
				}
			},
			"response": []
		},
		{
			"name": "check free places1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Count free places\", () => {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.places.length).to.eql(4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-username",
						"value": "user4446",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/places/api/v1/free",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"places",
						"api",
						"v1",
						"free"
					]
				}
			},
			"response": []
		},
		{
			"name": "add more money",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Operation success\", () => {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.code).to.eql('0');\r",
							"    pm.expect(responseJson.message).to.eql('Operation success');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-username",
						"value": "user4444",
						"type": "default"
					},
					{
						"key": "x-request-key",
						"value": "82e79781-086c-483d-85d4-899220bf4d15",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"money\":{\"username\": \"user4444\", \"money\": 554.52, \"operation\": \"add\"}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/money/api/v1/operation",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"money",
						"api",
						"v1",
						"operation"
					]
				}
			},
			"response": []
		},
		{
			"name": "booking place - \"Money Ok\"",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Success\", () => {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.result.code).to.eql('0');\r",
							"    pm.expect(responseJson.result.message).to.eql('Success');\r",
							"});\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"pm.collectionVariables.set(\"id1\", jsonData.parking.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-username",
						"value": "user4444",
						"type": "default"
					},
					{
						"key": "x-request-key",
						"value": "82e79781-086c-483d-85d4-899220bf4d11",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"parking\":{\"id\":null,\"placeId\":1,\"status\":\"booking\"}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/parking/api/v1/start",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"parking",
						"api",
						"v1",
						"start"
					]
				}
			},
			"response": []
		},
		{
			"name": "read",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Success\", () => {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.result.code).to.eql('0');\r",
							"    pm.expect(responseJson.result.message).to.eql('Success');\r",
							"    pm.expect(responseJson.parking.status).to.eql('booking');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-username",
						"value": "user4444",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"parking\":{\"id\": {{id1}}}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/parking/api/v1/read",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"parking",
						"api",
						"v1",
						"read"
					]
				}
			},
			"response": []
		},
		{
			"name": "check free places2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Count free places\", () => {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.places.length).to.eql(3);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-username",
						"value": "user4446",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/places/api/v1/free",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"places",
						"api",
						"v1",
						"free"
					]
				}
			},
			"response": []
		},
		{
			"name": "parking place",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Success\", () => {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.result.code).to.eql('0');\r",
							"    pm.expect(responseJson.result.message).to.eql('Success');\r",
							"});\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"pm.collectionVariables.set(\"id1\", jsonData.parking.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-username",
						"value": "user4444",
						"type": "default"
					},
					{
						"key": "x-request-key",
						"value": "82e79781-086c-483d-85d4-899220bf4d33",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"parking\":{\"id\": {{id1}},\"status\": \"parking\"}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/parking/api/v1/start",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"parking",
						"api",
						"v1",
						"start"
					]
				}
			},
			"response": []
		},
		{
			"name": "read",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Success\", () => {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.result.code).to.eql('0');\r",
							"    pm.expect(responseJson.result.message).to.eql('Success');\r",
							"    pm.expect(responseJson.parking.status).to.eql('parking');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-username",
						"value": "user4444",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"parking\":{\"id\": {{id1}}}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/parking/api/v1/read",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"parking",
						"api",
						"v1",
						"read"
					]
				}
			},
			"response": []
		},
		{
			"name": "stop",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Success\", () => {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.result.code).to.eql('0');\r",
							"    pm.expect(responseJson.result.message).to.eql('Success');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-username",
						"value": "user4444",
						"type": "default"
					},
					{
						"key": "x-request-key",
						"value": "82e79781-086c-483d-85d4-899220bf4d17",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"parking\":{\"id\": {{id1}}}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/parking/api/v1/stop",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"parking",
						"api",
						"v1",
						"stop"
					]
				}
			},
			"response": []
		},
		{
			"name": "read",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Success\", () => {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.result.code).to.eql('1');\r",
							"    pm.expect(responseJson.result.message).to.eql('Not found');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-username",
						"value": "user4444",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"parking\":{\"id\": {{id1}}}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/parking/api/v1/read",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"parking",
						"api",
						"v1",
						"read"
					]
				}
			},
			"response": []
		},
		{
			"name": "check free places3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Count free places\", () => {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.places.length).to.eql(4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-username",
						"value": "user4446",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/places/api/v1/free",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"places",
						"api",
						"v1",
						"free"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "arch.homework/otusapp/ilyabikmetov",
			"type": "default"
		},
		{
			"key": "id1",
			"value": "1",
			"type": "default"
		}
	]
}