apiVersion: batch/v1
kind: Job
metadata:
  name: postgres-job
spec:
  template:
    metadata:
      name:  postgres-initdb
      labels:
        app: init-postgresdb
    spec:
      containers:
        - image: postgres:12.10
          name: postgres-initdb
          command: [ "bin/sh", "-c", "PGPASSWORD=$DATABASE_PASSWORD psql -U $DATABASE_USER -d userdb -h postgres-service -a -f /app/migration/sqlCommand.sql" ]
          volumeMounts:
            - name: sql-command
              mountPath: "/app/migration"
          env:
            - name: DATABASE_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: username
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: password
      volumes:
        - name: sql-command
          configMap:
            name: sql-command
      restartPolicy: Never
---
apiVersion: v1
data:
  sqlCommand.sql: "create table if not exists users (\r\n    id bigint GENERATED BY DEFAULT
    AS IDENTITY,\r\n    username varchar(50) not null,\r\n    firstName varchar(50)
    not null,\r\n    lastName varchar(50) not null,\r\n    email varchar(50),\r\n
    \   phone varchar(11)\r\n);create table if not exists orders (\r\n    id bigint GENERATED BY DEFAULT
    AS IDENTITY,\r\n    username varchar(250) not null,\r\n    ordername varchar(250) not null,
    \r\n    quantity bigint not null,\r\n    requestKey varchar(250) not null,\r\n    deleted timestamp);
    \r\n    create table if not exists ordersversion (\r\n    id bigint GENERATED BY DEFAULT AS IDENTITY,
    \r\n    username varchar(250) not null,\r\n    version bigint not null);"
kind: ConfigMap
metadata:
  name: sql-command