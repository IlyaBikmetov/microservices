openapi: 3.0.0
info:
  description: |
    This is simple client API
  version: "1.0.0"
  title: User Service
  contact:
    email: schetinnikov@gmail.com
servers:
  - description: Example Server
    url: http://example.domain/api/v1/
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/otus55/users/1.0.0
tags:
  - name: user
    description: Operations about user
paths:
  /user/create:
    post:
      tags:
        - user
      summary: Create user
      operationId: userCreate
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateUpdateRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
  /user/read:
    post:
      tags:
        - user
      summary: Read user
      operationId: userRead
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateUpdateRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
  /ad/update:
    post:
      tags:
        - user
      summary: Update user
      operationId: userUpdate
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserReadDeleteRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
  /ad/delete:
    post:
      tags:
        - user
      summary: Delete user
      operationId: userDelete
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserReadDeleteRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'

components:
  schemas:
    UserObject:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
          maxLength: 256
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        phone:
          type: string
          format: phone

    UserId:
      type: object
      properties:
        id:
          type: integer
          format: int64

    Result:
      type: object
      properties:
        code:
          type: string
        message:
          type: string

    UserCreateUpdateRequest:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/UserObject'

    UserReadDeleteRequest:
      type: object
      properties:
        userId:
          $ref: '#/components/schemas/UserId'

    UserResponse:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/Result'
        user:
          $ref: '#/components/schemas/UserObject'