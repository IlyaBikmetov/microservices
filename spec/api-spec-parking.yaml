openapi: 3.0.0
info:
  description: |
    This is simple client API
  version: "1.0.0"
  title: Parking Service
  contact:
    email: ilyab_v@mail.ru
tags:
  - name: parking
    description: Operations about parking
paths:
  /parking/start:
    post:
      tags:
        - parking
      summary: Start parking
      operationId: parkingStart
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParkingResponse'

  /parking/read:
    get:
      tags:
        - parking
      summary: Read parking
      operationId: parkingRead
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParkingId'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParkingResponse'

  /parking/stop:
    post:
      tags:
        - parking
      summary: Stop parking
      operationId: parkingStop
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParkingResponse'

components:
  schemas:
    ParkingObject:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
          maxLength: 250
        place:
          type: string
          maxLength: 250
        start:
          type: string
          format: 'date-time'
        stop:
          type: string
          format: 'date-time'
        status:
          type: string
          maxLength: 50
        money:
          type: number
          multipleOf: 0.01

    StartRequest:
      type: object
      properties:
        parking:
          properties:
            id:
              type: integer
              format: int64
            placeId:
              type: integer
              format: int64
            status:
              $ref: '#/components/schemas/ParkingStatus'

    StopRequest:
      type: object
      properties:
        parking:
          properties:
            id:
              type: integer
              format: int64
            place:
              type: string
              maxLength: 50

    ParkingStatus:
      type: string
      enum:
        - free
        - booking
        - parking

    ParkingId:
      type: object
      properties:
        parking:
          properties:
            id:
              type: integer
              format: int64

    Result:
      type: object
      properties:
        code:
          type: string
        message:
          type: string

    ParkingResponse:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/Result'
        parking:
          $ref: '#/components/schemas/ParkingObject'

    PlaceResponse:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/Result'
        place:
          $ref: '#/components/schemas/PlaceObject'

    PlaceObject:
      type: object
      properties:
        id:
          type: integer
          format: int64
        place:
          type: string
          maxLength: 50
        status:
          $ref: '#/components/schemas/ParkingStatus'

    MoneyResponse:
      type: object
      properties:
        code:
          type: string
        message:
          type: string